// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_prepare_alignment_matrix
CharacterMatrix rcpp_prepare_alignment_matrix(CharacterMatrix ref);
RcppExport SEXP _AlignStat_rcpp_prepare_alignment_matrix(SEXP refSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type ref(refSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_prepare_alignment_matrix(ref));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_align
List rcpp_align(CharacterMatrix ref, CharacterMatrix com);
RcppExport SEXP _AlignStat_rcpp_align(SEXP refSEXP, SEXP comSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type ref(refSEXP);
    Rcpp::traits::input_parameter< CharacterMatrix >::type com(comSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_align(ref, com));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AlignStat_rcpp_prepare_alignment_matrix", (DL_FUNC) &_AlignStat_rcpp_prepare_alignment_matrix, 1},
    {"_AlignStat_rcpp_align", (DL_FUNC) &_AlignStat_rcpp_align, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_AlignStat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
